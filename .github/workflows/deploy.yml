name: Minimal Secure DevOps Pipeline

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  TF_DIR: terraform
  ANSIBLE_DIR: ansible

jobs:
  build-war:
    name: Build Spring Petclinic WAR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Clone spring-petclinic and build
        run: |
          git clone https://github.com/spring-projects/spring-petclinic.git
          cd spring-petclinic
          ./mvnw -B -DskipTests package
          mkdir -p ../secure-devops-pipeline-minimal/ansible/roles/spring-petclinic/files
          cp target/*.war ../secure-devops-pipeline-minimal/ansible/roles/spring-petclinic/files/spring-petclinic.war

      - name: Upload WAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: petclinic-war
          path: ansible/roles/spring-petclinic/files/spring-petclinic.war

  infra:
    name: Terraform apply
    runs-on: ubuntu-latest
    needs: build-war

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download WAR artifact
        uses: actions/download-artifact@v4
        with:
          name: petclinic-war
          path: ansible/roles/spring-petclinic/files/

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.6"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform init
        working-directory: ./terraform
        run: terraform init -backend-config="bucket=${{ secrets.S3_BUCKET }}" -backend-config="key=secure-devops-pipeline-minimal/terraform.tfstate" -backend-config="region=${{ env.AWS_REGION }}"

      - name: Terraform apply
        working-directory: ./terraform
        run: terraform apply -auto-approve -var="key_name=${{ secrets.AWS_KEY_NAME }}"

      - name: Save terraform output (tfoutput.json)
        working-directory: ./terraform
        run: terraform output -json > tfoutput.json

      - name: Upload tfoutput
        uses: actions/upload-artifact@v4
        with:
          name: tfoutput
          path: terraform/tfoutput.json

  deploy:
    name: Deploy with Ansible
    runs-on: ubuntu-latest
    needs: infra

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download WAR artifact
        uses: actions/download-artifact@v4
        with:
          name: petclinic-war
          path: ansible/roles/spring-petclinic/files/

      - name: Download tfoutput
        uses: actions/download-artifact@v4
        with:
          name: tfoutput
          path: terraform/

      - name: Generate inventory
        run: |
          python3 scripts/tf-to-inventory.py terraform/tfoutput.json > ansible/inventory.ini
          cat ansible/inventory.ini

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip sshpass
          pip3 install ansible

      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Run Ansible playbook
        working-directory: ./ansible
        run: ansible-playbook -i inventory.ini playbook.yml --private-key ~/.ssh/id_rsa -vv
