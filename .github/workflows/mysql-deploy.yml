name: MySQL deploy

on:
  workflow_dispatch:

env:
  AWS_REGION: us-east-1

jobs:
  mysql-setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.6"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Backend
        run: |
          chmod +x ./create-backend.sh
          ./create-backend.sh

      - name: Terraform init
        working-directory: ./terraform/mysql/
        run: terraform init

      - name: Terraform apply
        working-directory: ./terraform/mysql/
        run: terraform apply -auto-approve -var="key_name=${{ secrets.KEY_NAME }}"

      - name: Save Terraform output
        working-directory: ./terraform/mysql/
        run: terraform output -json > tfoutput.json

      - name: Upload Terraform output
        uses: actions/upload-artifact@v4
        with:
          name: tfoutput
          path: terraform/tfoutput.json

      - name: Download Terraform output
        uses: actions/download-artifact@v4
        with:
          name: tfoutput
          path: terraform/

      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip jq
          pip3 install ansible

      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Disable host key checking   
        run: |
          echo "Host *" > ~/.ssh/config
          echo "    StrictHostKeyChecking no" >> ~/.ssh/config
          chmod 600 ~/.ssh/config

      - name: Wait for EC2 SSH to be ready
        run: sleep 30

      - name: Generate Ansible inventory
        run: |
          python3 scripts/tf-to-inventory.py terraform/tfoutput.json > ansible/inventory.ini
          cat ansible/inventory.ini

      - name: Run Ansible playbook
        working-directory: ./ansible/mysql/
        run: ansible-playbook -i inventory.ini playbook.yml --private-key ~/.ssh/id_rsa -vv
